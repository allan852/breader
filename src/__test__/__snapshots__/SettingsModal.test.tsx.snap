// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsModal Testing snapshot testing 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={
    Object {
      "addFeed": "Add Feed",
      "allArticlesAreReadNow": "All articles are read now.",
      "delete": "Delete",
      "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
      "feedUrl": "Feed Url",
      "feeds": "Feeds",
      "feedsAreUpdated": "Feeds are Updated",
      "inputKeywords": "Please input the keywords",
      "invalidFeedUrl": "Invalid Feed Url",
      "keywords": "Keywords",
      "languages": "Languages",
      "menuAllItems": "All Items",
      "menuStarred": "Starred",
      "menuSubscriptions": "Subscriptions",
      "menuUnread": "Unread",
      "noFeeds": "No Feeds",
      "noMatched": "No Matched",
      "settings": "Settings",
      "somethingWrong": "Something Wrong!",
      "title": "Breader",
      "unfoundFeed": "Unfound Feed",
      "unknown": "Unknown",
    }
  }
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <injectIntl(SettingsModalComponent)
    asyncDeleteFeeds={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              "http://www.ruanyifeng.com/blog/atom.xml",
              "http://www.ruanyifeng.com/blog/atom.xml",
            ],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    feeds={
      Immutable.List [
        Object {
          "_id": "http://www.ruanyifeng.com/blog/atom.xml",
          "_rev": "5-55772bf2b4d4b74608a60ac3480334e4",
          "author": "ruanyifeng",
          "categories": Array [],
          "createTime": 1563686468437,
          "deleteTime": 0,
          "description": "Ruan YiFeng's Blog",
          "etag": "\\"11d86-58e2cc1eab031\\"",
          "favicon": "http://www.ruanyifeng.com/favicon.ico",
          "generator": "Movable Type 5.2.2 (http://www.sixapart.com/movabletype/)",
          "language": "",
          "link": "http://www.ruanyifeng.com/blog/",
          "publishTime": 1563697765000,
          "time": 1563697765000,
          "title": "阮一峰的网络日志",
          "url": "http://www.ruanyifeng.com/blog/atom.xml",
        },
      ]
    }
    language="en-US"
    onClose={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {},
          ],
          Array [
            Object {},
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onLanguageChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "zh-CN",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    setLanguage={
      [MockFunction] {
        "calls": Array [
          Array [
            "zh-CN",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    visible={true}
  >
    <SettingsModalComponent
      asyncDeleteFeeds={
        [MockFunction] {
          "calls": Array [
            Array [
              Array [
                "http://www.ruanyifeng.com/blog/atom.xml",
                "http://www.ruanyifeng.com/blog/atom.xml",
              ],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      feeds={
        Immutable.List [
          Object {
            "_id": "http://www.ruanyifeng.com/blog/atom.xml",
            "_rev": "5-55772bf2b4d4b74608a60ac3480334e4",
            "author": "ruanyifeng",
            "categories": Array [],
            "createTime": 1563686468437,
            "deleteTime": 0,
            "description": "Ruan YiFeng's Blog",
            "etag": "\\"11d86-58e2cc1eab031\\"",
            "favicon": "http://www.ruanyifeng.com/favicon.ico",
            "generator": "Movable Type 5.2.2 (http://www.sixapart.com/movabletype/)",
            "language": "",
            "link": "http://www.ruanyifeng.com/blog/",
            "publishTime": 1563697765000,
            "time": 1563697765000,
            "title": "阮一峰的网络日志",
            "url": "http://www.ruanyifeng.com/blog/atom.xml",
          },
        ]
      }
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en-US",
          "formatDate": [Function],
          "formatDateToParts": [Function],
          "formatHTMLMessage": [Function],
          "formatList": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en-US",
          "messages": Object {
            "addFeed": "Add Feed",
            "allArticlesAreReadNow": "All articles are read now.",
            "delete": "Delete",
            "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
            "feedUrl": "Feed Url",
            "feeds": "Feeds",
            "feedsAreUpdated": "Feeds are Updated",
            "inputKeywords": "Please input the keywords",
            "invalidFeedUrl": "Invalid Feed Url",
            "keywords": "Keywords",
            "languages": "Languages",
            "menuAllItems": "All Items",
            "menuStarred": "Starred",
            "menuSubscriptions": "Subscriptions",
            "menuUnread": "Unread",
            "noFeeds": "No Feeds",
            "noMatched": "No Matched",
            "settings": "Settings",
            "somethingWrong": "Something Wrong!",
            "title": "Breader",
            "unfoundFeed": "Unfound Feed",
            "unknown": "Unknown",
          },
          "onError": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
        }
      }
      language="en-US"
      onClose={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      onLanguageChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "zh-CN",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      setLanguage={
        [MockFunction] {
          "calls": Array [
            Array [
              "zh-CN",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      visible={true}
    >
      <Modal
        bodyStyle={
          Object {
            "maxHeight": "calc(100vh - 192px)",
          }
        }
        className="settings-modal"
        confirmLoading={false}
        maskTransitionName="fade"
        okType="primary"
        onCancel={[Function]}
        onOk={[Function]}
        style={
          Object {
            "top": 42,
          }
        }
        title={
          <FormattedMessage
            id="settings"
            values={Object {}}
          />
        }
        transitionName="zoom"
        visible={true}
        width={512}
      >
        <Component
          bodyStyle={
            Object {
              "maxHeight": "calc(100vh - 192px)",
            }
          }
          className="settings-modal"
          closeIcon={
            <span
              className="ant-modal-close-x"
            >
              <Icon
                className="ant-modal-close-icon"
                type="close"
              />
            </span>
          }
          confirmLoading={false}
          footer={
            <LocaleReceiver
              componentName="Modal"
              defaultLocale={
                Object {
                  "cancelText": "Cancel",
                  "justOkText": "OK",
                  "okText": "OK",
                }
              }
            >
              [Function]
            </LocaleReceiver>
          }
          maskTransitionName="fade"
          okType="primary"
          onCancel={[Function]}
          onClose={[Function]}
          onOk={[Function]}
          prefixCls="ant-modal"
          style={
            Object {
              "top": 42,
            }
          }
          title={
            <FormattedMessage
              id="settings"
              values={Object {}}
            />
          }
          transitionName="zoom"
          visible={true}
          width={512}
          wrapClassName=""
        >
          <PortalWrapper
            visible={true}
          >
            <Portal
              getContainer={[Function]}
            >
              <Portal
                containerInfo={
                  <div>
                    <div>
                      <div
                        class="ant-modal-mask fade-appear"
                      />
                      <div
                        aria-labelledby="rcDialogTitle1"
                        class="ant-modal-wrap "
                        role="dialog"
                        tabindex="-1"
                      >
                        <div
                          class="ant-modal settings-modal zoom-appear"
                          role="document"
                          style="top: 42px; width: 512px;"
                        >
                          <div
                            aria-hidden="true"
                            style="width: 0px; height: 0px; overflow: hidden;"
                            tabindex="0"
                          />
                          <div
                            class="ant-modal-content"
                          >
                            <button
                              aria-label="Close"
                              class="ant-modal-close"
                              type="button"
                            >
                              <span
                                class="ant-modal-close-x"
                              >
                                <i
                                  aria-label="icon: close"
                                  class="anticon anticon-close ant-modal-close-icon"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class=""
                                    data-icon="close"
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    viewBox="64 64 896 896"
                                    width="1em"
                                  >
                                    <path
                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                    />
                                  </svg>
                                </i>
                              </span>
                            </button>
                            <div
                              class="ant-modal-header"
                            >
                              <div
                                class="ant-modal-title"
                                id="rcDialogTitle1"
                              >
                                Settings
                              </div>
                            </div>
                            <div
                              class="ant-modal-body"
                              style="max-height: calc(100vh - 192px);"
                            >
                              <div
                                class="settings-content"
                              >
                                <div
                                  class="languages-setting"
                                >
                                  <p
                                    class="settings-item-title"
                                  >
                                    Languages
                                  </p>
                                  <div
                                    class="ant-select ant-select-enabled"
                                    style="width: 100%;"
                                  >
                                    <div
                                      aria-autocomplete="list"
                                      aria-controls="test-uuid"
                                      aria-expanded="false"
                                      aria-haspopup="true"
                                      class="ant-select-selection
            ant-select-selection--single"
                                      role="combobox"
                                      tabindex="0"
                                    >
                                      <div
                                        class="ant-select-selection__rendered"
                                      >
                                        <div
                                          class="ant-select-selection-selected-value"
                                          style="display: block; opacity: 1;"
                                          title="en-US"
                                        >
                                          en-US
                                        </div>
                                      </div>
                                      <span
                                        class="ant-select-arrow"
                                        style="user-select: none;"
                                        unselectable="on"
                                      >
                                        <i
                                          aria-label="icon: down"
                                          class="anticon anticon-down ant-select-arrow-icon"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class=""
                                            data-icon="down"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                            />
                                          </svg>
                                        </i>
                                      </span>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="feeds-setting"
                                >
                                  <p
                                    class="settings-item-title"
                                  >
                                    Feeds
                                  </p>
                                  <div
                                    class="ant-list ant-list-sm ant-list-split ant-list-bordered setting-feed-list"
                                  >
                                    <div
                                      style="position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0; max-height: calc(100vh - 332px);"
                                    >
                                      <div
                                        style="position: relative; overflow: scroll; margin-right: 0px; margin-bottom: 0px; min-height: 0; max-height: calc(calc(100vh - 332px) + 0px);"
                                      >
                                        <ul
                                          class="ant-list-items setting-feed-items"
                                        >
                                          <li
                                            class="ant-list-item setting-feed-item"
                                          >
                                            <p
                                              class="feed-item-content"
                                              title="http://www.ruanyifeng.com/blog/atom.xml"
                                            >
                                              <span
                                                class="ant-avatar ant-avatar-square ant-avatar-image"
                                                style="width: 16px; height: 16px; line-height: 16px; font-size: 18px;"
                                              >
                                                <img
                                                  src="http://www.ruanyifeng.com/favicon.ico"
                                                />
                                              </span>
                                               
                                              阮一峰的网络日志
                                            </p>
                                            <ul
                                              class="ant-list-item-action"
                                            >
                                              <li>
                                                <button
                                                  class="ant-btn ant-btn-danger ant-btn-sm"
                                                  type="button"
                                                >
                                                  Delete
                                                </button>
                                              </li>
                                            </ul>
                                          </li>
                                        </ul>
                                      </div>
                                      <div
                                        style="position: absolute; height: 6px; transition: opacity 200ms; opacity: 0; display: none; right: 2px; bottom: 2px; left: 2px; border-radius: 3px;"
                                      >
                                        <div
                                          style="position: relative; display: block; height: 100%; cursor: pointer; border-radius: inherit; background-color: rgba(0, 0, 0, 0.2);"
                                        />
                                      </div>
                                      <div
                                        style="position: absolute; width: 6px; transition: opacity 200ms; opacity: 0; display: none; right: 2px; bottom: 2px; top: 2px; border-radius: 3px;"
                                      >
                                        <div
                                          style="position: relative; display: block; width: 100%; cursor: pointer; border-radius: inherit; background-color: rgba(0, 0, 0, 0.2);"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              class="ant-modal-footer"
                            >
                              <div>
                                <button
                                  class="ant-btn"
                                  type="button"
                                >
                                  <span>
                                    Cancel
                                  </span>
                                </button>
                                <button
                                  class="ant-btn ant-btn-primary"
                                  type="button"
                                >
                                  <span>
                                    OK
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                          <div
                            aria-hidden="true"
                            style="width: 0px; height: 0px; overflow: hidden;"
                            tabindex="0"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                }
              >
                <Dialog
                  bodyStyle={
                    Object {
                      "maxHeight": "calc(100vh - 192px)",
                    }
                  }
                  className="settings-modal"
                  closable={true}
                  closeIcon={
                    <span
                      className="ant-modal-close-x"
                    >
                      <Icon
                        className="ant-modal-close-icon"
                        type="close"
                      />
                    </span>
                  }
                  confirmLoading={false}
                  destroyOnClose={false}
                  footer={
                    <LocaleReceiver
                      componentName="Modal"
                      defaultLocale={
                        Object {
                          "cancelText": "Cancel",
                          "justOkText": "OK",
                          "okText": "OK",
                        }
                      }
                    >
                      [Function]
                    </LocaleReceiver>
                  }
                  getContainer={[Function]}
                  getOpenCount={[Function]}
                  keyboard={true}
                  mask={true}
                  maskClosable={true}
                  maskTransitionName="fade"
                  okType="primary"
                  onCancel={[Function]}
                  onClose={[Function]}
                  onOk={[Function]}
                  prefixCls="ant-modal"
                  style={
                    Object {
                      "top": 42,
                    }
                  }
                  title={
                    <FormattedMessage
                      id="settings"
                      values={Object {}}
                    />
                  }
                  transitionName="zoom"
                  visible={true}
                  width={512}
                  wrapClassName=""
                >
                  <div>
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="mask"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      showProp="visible"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="fade"
                    >
                      <AnimateChild
                        animation={Object {}}
                        key="mask"
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="fade"
                      >
                        <LazyRenderBox
                          className="ant-modal-mask"
                          hiddenClassName="ant-modal-mask-hidden"
                          key="mask"
                          style={Object {}}
                          visible={true}
                        >
                          <div
                            className="ant-modal-mask"
                            style={Object {}}
                          />
                        </LazyRenderBox>
                      </AnimateChild>
                    </Animate>
                    <div
                      aria-labelledby="rcDialogTitle1"
                      className="ant-modal-wrap "
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onMouseUp={[Function]}
                      role="dialog"
                      style={
                        Object {
                          "display": null,
                        }
                      }
                      tabIndex={-1}
                    >
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="dialog"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        showProp="visible"
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="zoom"
                      >
                        <AnimateChild
                          animation={Object {}}
                          key="dialog-element"
                          transitionAppear={true}
                          transitionEnter={true}
                          transitionLeave={true}
                          transitionName="zoom"
                        >
                          <LazyRenderBox
                            className="ant-modal settings-modal"
                            key="dialog-element"
                            onMouseDown={[Function]}
                            role="document"
                            style={
                              Object {
                                "top": 42,
                                "width": 512,
                              }
                            }
                            visible={true}
                          >
                            <div
                              className="ant-modal settings-modal"
                              onMouseDown={[Function]}
                              role="document"
                              style={
                                Object {
                                  "top": 42,
                                  "width": 512,
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                style={
                                  Object {
                                    "height": 0,
                                    "overflow": "hidden",
                                    "width": 0,
                                  }
                                }
                                tabIndex={0}
                              />
                              <div
                                className="ant-modal-content"
                              >
                                <button
                                  aria-label="Close"
                                  className="ant-modal-close"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <span
                                    className="ant-modal-close-x"
                                  >
                                    <Icon
                                      className="ant-modal-close-icon"
                                      type="close"
                                    >
                                      <LocaleReceiver
                                        componentName="Icon"
                                      >
                                        <i
                                          aria-label="icon: close"
                                          className="anticon anticon-close ant-modal-close-icon"
                                        >
                                          <IconReact
                                            className=""
                                            type="close-o"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className=""
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-close"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                key="svg-close-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </i>
                                      </LocaleReceiver>
                                    </Icon>
                                  </span>
                                </button>
                                <div
                                  className="ant-modal-header"
                                >
                                  <div
                                    className="ant-modal-title"
                                    id="rcDialogTitle1"
                                  >
                                    <FormattedMessage
                                      id="settings"
                                      values={Object {}}
                                    >
                                      Settings
                                    </FormattedMessage>
                                  </div>
                                </div>
                                <div
                                  className="ant-modal-body"
                                  style={
                                    Object {
                                      "maxHeight": "calc(100vh - 192px)",
                                    }
                                  }
                                >
                                  <div
                                    className="settings-content"
                                  >
                                    <div
                                      className="languages-setting"
                                    >
                                      <p
                                        className="settings-item-title"
                                      >
                                        <FormattedMessage
                                          id="languages"
                                          values={Object {}}
                                        >
                                          Languages
                                        </FormattedMessage>
                                      </p>
                                      <Select
                                        choiceTransitionName="zoom"
                                        defaultValue="en-US"
                                        onChange={[Function]}
                                        showSearch={false}
                                        style={
                                          Object {
                                            "width": "100%",
                                          }
                                        }
                                        transitionName="slide-up"
                                      >
                                        <Select
                                          allowClear={false}
                                          autoClearSearchValue={true}
                                          backfill={false}
                                          choiceTransitionName="zoom"
                                          className=""
                                          clearIcon={
                                            <Icon
                                              className="ant-select-clear-icon"
                                              theme="filled"
                                              type="close-circle"
                                            />
                                          }
                                          combobox={false}
                                          defaultActiveFirstOption={true}
                                          defaultOpen={false}
                                          defaultValue="en-US"
                                          dropdownMatchSelectWidth={true}
                                          dropdownMenuStyle={Object {}}
                                          dropdownRender={[Function]}
                                          dropdownStyle={Object {}}
                                          inputIcon={
                                            <Icon
                                              className="ant-select-arrow-icon"
                                              type="down"
                                            />
                                          }
                                          labelInValue={false}
                                          menuItemSelectedIcon={
                                            <Icon
                                              className="ant-select-selected-icon"
                                              type="check"
                                            />
                                          }
                                          multiple={false}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onDeselect={[Function]}
                                          onFocus={[Function]}
                                          onInputKeyDown={[Function]}
                                          onSearch={[Function]}
                                          onSelect={[Function]}
                                          optionFilterProp="value"
                                          optionLabelProp="children"
                                          placeholder=""
                                          prefixCls="ant-select"
                                          removeIcon={
                                            <Icon
                                              className="ant-select-remove-icon"
                                              type="close"
                                            />
                                          }
                                          showAction={
                                            Array [
                                              "click",
                                            ]
                                          }
                                          showSearch={false}
                                          style={
                                            Object {
                                              "width": "100%",
                                            }
                                          }
                                          tabIndex={0}
                                          tags={false}
                                          tokenSeparators={Array []}
                                          transitionName="slide-up"
                                        >
                                          <SelectTrigger
                                            ariaId="test-uuid"
                                            backfillValue=""
                                            combobox={false}
                                            defaultActiveFirstOption={true}
                                            dropdownMatchSelectWidth={true}
                                            dropdownMenuStyle={Object {}}
                                            dropdownRender={[Function]}
                                            dropdownStyle={Object {}}
                                            empty={false}
                                            inputValue=""
                                            menuItemSelectedIcon={
                                              <Icon
                                                className="ant-select-selected-icon"
                                                type="check"
                                              />
                                            }
                                            multiple={false}
                                            onDropdownVisibleChange={[Function]}
                                            onMenuDeselect={[Function]}
                                            onMenuSelect={[Function]}
                                            onPopupFocus={[Function]}
                                            options={Array []}
                                            prefixCls="ant-select"
                                            showAction={
                                              Array [
                                                "click",
                                              ]
                                            }
                                            showSearch={false}
                                            transitionName="slide-up"
                                            value={
                                              Array [
                                                "en-US",
                                              ]
                                            }
                                            visible={false}
                                          >
                                            <Trigger
                                              action={Array []}
                                              afterPopupVisibleChange={[Function]}
                                              ariaId="test-uuid"
                                              backfillValue=""
                                              blurDelay={0.15}
                                              builtinPlacements={
                                                Object {
                                                  "bottomLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "tl",
                                                      "bl",
                                                    ],
                                                  },
                                                  "topLeft": Object {
                                                    "offset": Array [
                                                      0,
                                                      -4,
                                                    ],
                                                    "overflow": Object {
                                                      "adjustX": 0,
                                                      "adjustY": 1,
                                                    },
                                                    "points": Array [
                                                      "bl",
                                                      "tl",
                                                    ],
                                                  },
                                                }
                                              }
                                              combobox={false}
                                              defaultActiveFirstOption={true}
                                              defaultPopupVisible={false}
                                              destroyPopupOnHide={false}
                                              dropdownMatchSelectWidth={true}
                                              dropdownMenuStyle={Object {}}
                                              dropdownRender={[Function]}
                                              dropdownStyle={Object {}}
                                              focusDelay={0}
                                              getDocument={[Function]}
                                              getPopupClassNameFromAlign={[Function]}
                                              hideAction={
                                                Array [
                                                  "click",
                                                ]
                                              }
                                              inputValue=""
                                              mask={false}
                                              maskClosable={true}
                                              menuItemSelectedIcon={
                                                <Icon
                                                  className="ant-select-selected-icon"
                                                  type="check"
                                                />
                                              }
                                              mouseEnterDelay={0}
                                              mouseLeaveDelay={0.1}
                                              multiple={false}
                                              onDropdownVisibleChange={[Function]}
                                              onMenuDeselect={[Function]}
                                              onMenuSelect={[Function]}
                                              onPopupAlign={[Function]}
                                              onPopupVisibleChange={[Function]}
                                              options={Array []}
                                              popup={
                                                <DropdownMenu
                                                  ariaId="test-uuid"
                                                  backfillValue=""
                                                  defaultActiveFirstOption={true}
                                                  dropdownMenuStyle={Object {}}
                                                  inputValue=""
                                                  menuItemSelectedIcon={
                                                    <Icon
                                                      className="ant-select-selected-icon"
                                                      type="check"
                                                    />
                                                  }
                                                  menuItems={Array []}
                                                  multiple={false}
                                                  onMenuDeselect={[Function]}
                                                  onMenuSelect={[Function]}
                                                  onPopupFocus={[Function]}
                                                  prefixCls="ant-select-dropdown"
                                                  value={
                                                    Array [
                                                      "en-US",
                                                    ]
                                                  }
                                                  visible={false}
                                                />
                                              }
                                              popupAlign={Object {}}
                                              popupClassName="ant-select-dropdown--single"
                                              popupPlacement="bottomLeft"
                                              popupStyle={Object {}}
                                              popupTransitionName="slide-up"
                                              popupVisible={false}
                                              prefixCls="ant-select-dropdown"
                                              showAction={
                                                Array [
                                                  "click",
                                                ]
                                              }
                                              showSearch={false}
                                              transitionName="slide-up"
                                              value={
                                                Array [
                                                  "en-US",
                                                ]
                                              }
                                              visible={false}
                                            >
                                              <div
                                                className="ant-select ant-select-enabled"
                                                key="trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseOut={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchStart={[Function]}
                                                style={
                                                  Object {
                                                    "width": "100%",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-autocomplete="list"
                                                  aria-controls="test-uuid"
                                                  aria-expanded={false}
                                                  aria-haspopup="true"
                                                  className="ant-select-selection
            ant-select-selection--single"
                                                  key="selection"
                                                  onKeyDown={[Function]}
                                                  role="combobox"
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="ant-select-selection__rendered"
                                                  >
                                                    <div
                                                      className="ant-select-selection-selected-value"
                                                      key="value"
                                                      style={
                                                        Object {
                                                          "display": "block",
                                                          "opacity": 1,
                                                        }
                                                      }
                                                      title="en-US"
                                                    >
                                                      en-US
                                                    </div>
                                                  </div>
                                                  <span
                                                    className="ant-select-arrow"
                                                    key="arrow"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <Icon
                                                      className="ant-select-arrow-icon"
                                                      type="down"
                                                    >
                                                      <LocaleReceiver
                                                        componentName="Icon"
                                                      >
                                                        <i
                                                          aria-label="icon: down"
                                                          className="anticon anticon-down ant-select-arrow-icon"
                                                        >
                                                          <IconReact
                                                            className=""
                                                            type="down-o"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className=""
                                                              data-icon="down"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-down"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                key="svg-down-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </i>
                                                      </LocaleReceiver>
                                                    </Icon>
                                                  </span>
                                                </div>
                                              </div>
                                            </Trigger>
                                          </SelectTrigger>
                                        </Select>
                                      </Select>
                                    </div>
                                    <div
                                      className="feeds-setting"
                                    >
                                      <p
                                        className="settings-item-title"
                                      >
                                        <FormattedMessage
                                          id="feeds"
                                          values={Object {}}
                                        >
                                          Feeds
                                        </FormattedMessage>
                                      </p>
                                      <injectIntl(SettingFeedListComponent)
                                        feeds={
                                          Array [
                                            Object {
                                              "_id": "http://www.ruanyifeng.com/blog/atom.xml",
                                              "_rev": "5-55772bf2b4d4b74608a60ac3480334e4",
                                              "author": "ruanyifeng",
                                              "categories": Array [],
                                              "createTime": 1563686468437,
                                              "deleteTime": 0,
                                              "description": "Ruan YiFeng's Blog",
                                              "etag": "\\"11d86-58e2cc1eab031\\"",
                                              "favicon": "http://www.ruanyifeng.com/favicon.ico",
                                              "generator": "Movable Type 5.2.2 (http://www.sixapart.com/movabletype/)",
                                              "language": "",
                                              "link": "http://www.ruanyifeng.com/blog/",
                                              "publishTime": 1563697765000,
                                              "time": 1563697765000,
                                              "title": "阮一峰的网络日志",
                                              "url": "http://www.ruanyifeng.com/blog/atom.xml",
                                            },
                                          ]
                                        }
                                        onDeleteFeed={[Function]}
                                      >
                                        <SettingFeedListComponent
                                          feeds={
                                            Array [
                                              Object {
                                                "_id": "http://www.ruanyifeng.com/blog/atom.xml",
                                                "_rev": "5-55772bf2b4d4b74608a60ac3480334e4",
                                                "author": "ruanyifeng",
                                                "categories": Array [],
                                                "createTime": 1563686468437,
                                                "deleteTime": 0,
                                                "description": "Ruan YiFeng's Blog",
                                                "etag": "\\"11d86-58e2cc1eab031\\"",
                                                "favicon": "http://www.ruanyifeng.com/favicon.ico",
                                                "generator": "Movable Type 5.2.2 (http://www.sixapart.com/movabletype/)",
                                                "language": "",
                                                "link": "http://www.ruanyifeng.com/blog/",
                                                "publishTime": 1563697765000,
                                                "time": 1563697765000,
                                                "title": "阮一峰的网络日志",
                                                "url": "http://www.ruanyifeng.com/blog/atom.xml",
                                              },
                                            ]
                                          }
                                          intl={
                                            Object {
                                              "defaultFormats": Object {},
                                              "defaultLocale": "en-US",
                                              "formatDate": [Function],
                                              "formatDateToParts": [Function],
                                              "formatHTMLMessage": [Function],
                                              "formatList": [Function],
                                              "formatMessage": [Function],
                                              "formatNumber": [Function],
                                              "formatNumberToParts": [Function],
                                              "formatPlural": [Function],
                                              "formatRelativeTime": [Function],
                                              "formatTime": [Function],
                                              "formatTimeToParts": [Function],
                                              "formats": Object {},
                                              "formatters": Object {
                                                "getDateTimeFormat": [Function],
                                                "getListFormat": [Function],
                                                "getMessageFormat": [Function],
                                                "getNumberFormat": [Function],
                                                "getPluralRules": [Function],
                                                "getRelativeTimeFormat": [Function],
                                              },
                                              "locale": "en-US",
                                              "messages": Object {
                                                "addFeed": "Add Feed",
                                                "allArticlesAreReadNow": "All articles are read now.",
                                                "delete": "Delete",
                                                "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
                                                "feedUrl": "Feed Url",
                                                "feeds": "Feeds",
                                                "feedsAreUpdated": "Feeds are Updated",
                                                "inputKeywords": "Please input the keywords",
                                                "invalidFeedUrl": "Invalid Feed Url",
                                                "keywords": "Keywords",
                                                "languages": "Languages",
                                                "menuAllItems": "All Items",
                                                "menuStarred": "Starred",
                                                "menuSubscriptions": "Subscriptions",
                                                "menuUnread": "Unread",
                                                "noFeeds": "No Feeds",
                                                "noMatched": "No Matched",
                                                "settings": "Settings",
                                                "somethingWrong": "Something Wrong!",
                                                "title": "Breader",
                                                "unfoundFeed": "Unfound Feed",
                                                "unknown": "Unknown",
                                              },
                                              "onError": [Function],
                                              "textComponent": Symbol(react.fragment),
                                              "timeZone": undefined,
                                            }
                                          }
                                          onDeleteFeed={[Function]}
                                        >
                                          <div
                                            className="ant-list ant-list-sm ant-list-split ant-list-bordered setting-feed-list"
                                          >
                                            <Scrollbars
                                              autoHeight={true}
                                              autoHeightMax="calc(100vh - 332px)"
                                              autoHeightMin={0}
                                              autoHide={true}
                                              autoHideDuration={200}
                                              autoHideTimeout={1000}
                                              hideTracksWhenNotNeeded={false}
                                              onScrollStart={[Function]}
                                              renderThumbHorizontal={[Function]}
                                              renderThumbVertical={[Function]}
                                              renderTrackHorizontal={[Function]}
                                              renderTrackVertical={[Function]}
                                              renderView={[Function]}
                                              tagName="div"
                                              thumbMinSize={30}
                                              universal={false}
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": "auto",
                                                    "maxHeight": "calc(100vh - 332px)",
                                                    "minHeight": 0,
                                                    "overflow": "hidden",
                                                    "position": "relative",
                                                    "width": "100%",
                                                  }
                                                }
                                              >
                                                <div
                                                  key="view"
                                                  style={
                                                    Object {
                                                      "WebkitOverflowScrolling": "touch",
                                                      "bottom": undefined,
                                                      "left": undefined,
                                                      "marginBottom": 0,
                                                      "marginRight": 0,
                                                      "maxHeight": "calc(calc(100vh - 332px) + 0px)",
                                                      "minHeight": 0,
                                                      "overflow": "scroll",
                                                      "position": "relative",
                                                      "right": undefined,
                                                      "top": undefined,
                                                    }
                                                  }
                                                >
                                                  <ul
                                                    className="ant-list-items setting-feed-items"
                                                  >
                                                    <Item
                                                      actions={
                                                        Array [
                                                          <Button
                                                            block={false}
                                                            ghost={false}
                                                            htmlType="button"
                                                            loading={false}
                                                            onClick={[Function]}
                                                            size="small"
                                                            type="danger"
                                                          >
                                                            <FormattedMessage
                                                              id="delete"
                                                              values={Object {}}
                                                            />
                                                          </Button>,
                                                        ]
                                                      }
                                                      className="setting-feed-item"
                                                      key="http://www.ruanyifeng.com/blog/atom.xml"
                                                    >
                                                      <li
                                                        className="ant-list-item setting-feed-item"
                                                      >
                                                        <p
                                                          className="feed-item-content"
                                                          title="http://www.ruanyifeng.com/blog/atom.xml"
                                                        >
                                                          <Avatar
                                                            shape="square"
                                                            size={16}
                                                            src="http://www.ruanyifeng.com/favicon.ico"
                                                          >
                                                            <span
                                                              className="ant-avatar ant-avatar-square ant-avatar-image"
                                                              style={
                                                                Object {
                                                                  "fontSize": 18,
                                                                  "height": 16,
                                                                  "lineHeight": "16px",
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <img
                                                                onError={[Function]}
                                                                src="http://www.ruanyifeng.com/favicon.ico"
                                                              />
                                                            </span>
                                                          </Avatar>
                                                           
                                                          阮一峰的网络日志
                                                        </p>
                                                        <ul
                                                          className="ant-list-item-action"
                                                          key="actions"
                                                        >
                                                          <li
                                                            key="ant-list-item-action-0"
                                                          >
                                                            <Button
                                                              block={false}
                                                              ghost={false}
                                                              htmlType="button"
                                                              key="http://www.ruanyifeng.com/blog/atom.xml"
                                                              loading={false}
                                                              onClick={[Function]}
                                                              size="small"
                                                              type="danger"
                                                            >
                                                              <Wave>
                                                                <button
                                                                  className="ant-btn ant-btn-danger ant-btn-sm"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <FormattedMessage
                                                                    id="delete"
                                                                    key=".0"
                                                                    values={Object {}}
                                                                  >
                                                                    Delete
                                                                  </FormattedMessage>
                                                                </button>
                                                              </Wave>
                                                            </Button>
                                                          </li>
                                                        </ul>
                                                      </li>
                                                    </Item>
                                                  </ul>
                                                </div>
                                                <div
                                                  key="trackHorizontal"
                                                  style={
                                                    Object {
                                                      "borderRadius": 3,
                                                      "bottom": 2,
                                                      "display": "none",
                                                      "height": 6,
                                                      "left": 2,
                                                      "opacity": 0,
                                                      "position": "absolute",
                                                      "right": 2,
                                                      "transition": "opacity 200ms",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    style={
                                                      Object {
                                                        "backgroundColor": "rgba(0,0,0,.2)",
                                                        "borderRadius": "inherit",
                                                        "cursor": "pointer",
                                                        "display": "block",
                                                        "height": "100%",
                                                        "position": "relative",
                                                      }
                                                    }
                                                  />
                                                </div>
                                                <div
                                                  key="trackVertical"
                                                  style={
                                                    Object {
                                                      "borderRadius": 3,
                                                      "bottom": 2,
                                                      "display": "none",
                                                      "opacity": 0,
                                                      "position": "absolute",
                                                      "right": 2,
                                                      "top": 2,
                                                      "transition": "opacity 200ms",
                                                      "width": 6,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    style={
                                                      Object {
                                                        "backgroundColor": "rgba(0,0,0,.2)",
                                                        "borderRadius": "inherit",
                                                        "cursor": "pointer",
                                                        "display": "block",
                                                        "position": "relative",
                                                        "width": "100%",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </div>
                                            </Scrollbars>
                                          </div>
                                        </SettingFeedListComponent>
                                      </injectIntl(SettingFeedListComponent)>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  className="ant-modal-footer"
                                >
                                  <LocaleReceiver
                                    componentName="Modal"
                                    defaultLocale={
                                      Object {
                                        "cancelText": "Cancel",
                                        "justOkText": "OK",
                                        "okText": "OK",
                                      }
                                    }
                                  >
                                    <div>
                                      <Button
                                        block={false}
                                        ghost={false}
                                        htmlType="button"
                                        loading={false}
                                        onClick={[Function]}
                                      >
                                        <Wave>
                                          <button
                                            className="ant-btn"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              key=".0"
                                            >
                                              Cancel
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                      <Button
                                        block={false}
                                        ghost={false}
                                        htmlType="button"
                                        loading={false}
                                        onClick={[Function]}
                                        type="primary"
                                      >
                                        <Wave>
                                          <button
                                            className="ant-btn ant-btn-primary"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              key=".0"
                                            >
                                              OK
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                  </LocaleReceiver>
                                </div>
                              </div>
                              <div
                                aria-hidden="true"
                                style={
                                  Object {
                                    "height": 0,
                                    "overflow": "hidden",
                                    "width": 0,
                                  }
                                }
                                tabIndex={0}
                              />
                            </div>
                          </LazyRenderBox>
                        </AnimateChild>
                      </Animate>
                    </div>
                  </div>
                </Dialog>
              </Portal>
            </Portal>
          </PortalWrapper>
        </Component>
      </Modal>
    </SettingsModalComponent>
  </injectIntl(SettingsModalComponent)>
</IntlProvider>
`;
