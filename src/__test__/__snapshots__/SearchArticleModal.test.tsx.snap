// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchArticleModal Testing snapshot testing 1`] = `
<InjectIntl(SearchArticleModal)
  articles={
    Immutable.List [
      Object {
        "_id": "tag:www.ruanyifeng.com,2019:/blog//1.2100",
        "_rev": "5-ff6fc450616071a8f7d022b7532e85aa",
        "author": "ruanyifeng",
        "categories": Array [],
        "comments": "article comments",
        "createTime": 1563697765000,
        "deleteTime": 0,
        "description": "article description",
        "enclosures": Array [],
        "feedId": "http://www.ruanyifeng.com/blog/atom.xml",
        "image": "",
        "isDayFirst": true,
        "isStarred": false,
        "isUnread": false,
        "link": "http://www.ruanyifeng.com/blog/2019/07/weekly-issue-65.html",
        "originLink": "",
        "publishTime": 1563697765000,
        "summary": "article summary",
        "time": 1563697765000,
        "title": "article title",
      },
    ]
  }
  onCancel={[MockFunction]}
  onItemChoose={[MockFunction]}
  visible={true}
>
  <SearchArticleModal
    articles={
      Immutable.List [
        Object {
          "_id": "tag:www.ruanyifeng.com,2019:/blog//1.2100",
          "_rev": "5-ff6fc450616071a8f7d022b7532e85aa",
          "author": "ruanyifeng",
          "categories": Array [],
          "comments": "article comments",
          "createTime": 1563697765000,
          "deleteTime": 0,
          "description": "article description",
          "enclosures": Array [],
          "feedId": "http://www.ruanyifeng.com/blog/atom.xml",
          "image": "",
          "isDayFirst": true,
          "isStarred": false,
          "isUnread": false,
          "link": "http://www.ruanyifeng.com/blog/2019/07/weekly-issue-65.html",
          "originLink": "",
          "publishTime": 1563697765000,
          "summary": "article summary",
          "time": 1563697765000,
          "title": "article title",
        },
      ]
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en-US",
        "messages": Object {
          "addFeed": "Add Feed",
          "allArticlesAreReadNow": "All articles are read now.",
          "delete": "Delete",
          "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
          "feedUrl": "Feed Url",
          "feeds": "Feeds",
          "feedsAreUpdated": "Feeds are Updated",
          "invalidFeedUrl": "Invalid Feed Url",
          "keywords": "Keywords",
          "languages": "Languages",
          "menuAllItems": "All Items",
          "menuStarred": "Starred",
          "menuSubscriptions": "Subscriptions",
          "menuUnread": "Unread",
          "noMatched": "No matched",
          "settings": "Settings",
          "somethingWrong": "Something Wrong!",
          "title": "Breader",
          "unfoundFeed": "Unfound Feed",
          "unknown": "Unknown",
        },
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    onCancel={[MockFunction]}
    onItemChoose={[MockFunction]}
    visible={true}
  >
    <Modal
      className="search-article-modal"
      closable={false}
      confirmLoading={false}
      footer={null}
      maskTransitionName="fade"
      okType="primary"
      onCancel={[MockFunction]}
      style={
        Object {
          "top": 42,
        }
      }
      transitionName="zoom"
      visible={true}
      width={376}
    >
      <Component
        className="search-article-modal"
        closable={false}
        closeIcon={
          <span
            className="ant-modal-close-x"
          >
            <Icon
              className="ant-modal-close-icon"
              type="close"
            />
          </span>
        }
        confirmLoading={false}
        footer={null}
        maskTransitionName="fade"
        okType="primary"
        onCancel={[MockFunction]}
        onClose={[Function]}
        prefixCls="ant-modal"
        style={
          Object {
            "top": 42,
          }
        }
        transitionName="zoom"
        visible={true}
        width={376}
        wrapClassName=""
      >
        <PortalWrapper
          visible={true}
        >
          <Portal
            getContainer={[Function]}
          >
            <Portal
              containerInfo={
                <div>
                  <div>
                    <div
                      class="ant-modal-mask fade-appear"
                    />
                    <div
                      class="ant-modal-wrap "
                      role="dialog"
                      tabindex="-1"
                    >
                      <div
                        class="ant-modal search-article-modal zoom-appear"
                        role="document"
                        style="top: 42px; width: 376px;"
                      >
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden;"
                          tabindex="0"
                        />
                        <div
                          class="ant-modal-content"
                        >
                          <div
                            class="ant-modal-body"
                          >
                            <span
                              class="ant-input-search search-article-keywords ant-input-affix-wrapper"
                            >
                              <input
                                class="ant-input"
                                placeholder="Keywords"
                                type="text"
                                value=""
                              />
                              <span
                                class="ant-input-suffix"
                              >
                                <i
                                  aria-label="icon: search"
                                  class="anticon anticon-search ant-input-search-icon"
                                  tabindex="-1"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class=""
                                    data-icon="search"
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    viewBox="64 64 896 896"
                                    width="1em"
                                  >
                                    <path
                                      d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                                    />
                                  </svg>
                                </i>
                              </span>
                            </span>
                            <div
                              class="matched-list"
                            />
                          </div>
                        </div>
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden;"
                          tabindex="0"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              }
            >
              <Dialog
                className="search-article-modal"
                closable={false}
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <Icon
                      className="ant-modal-close-icon"
                      type="close"
                    />
                  </span>
                }
                confirmLoading={false}
                destroyOnClose={false}
                footer={null}
                getContainer={[Function]}
                getOpenCount={[Function]}
                keyboard={true}
                mask={true}
                maskClosable={true}
                maskTransitionName="fade"
                okType="primary"
                onCancel={[MockFunction]}
                onClose={[Function]}
                prefixCls="ant-modal"
                style={
                  Object {
                    "top": 42,
                  }
                }
                transitionName="zoom"
                visible={true}
                width={376}
                wrapClassName=""
              >
                <div>
                  <Animate
                    animation={Object {}}
                    component=""
                    componentProps={Object {}}
                    key="mask"
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="visible"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="fade"
                  >
                    <AnimateChild
                      animation={Object {}}
                      key="mask"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="fade"
                    >
                      <LazyRenderBox
                        className="ant-modal-mask"
                        hiddenClassName="ant-modal-mask-hidden"
                        key="mask"
                        style={Object {}}
                        visible={true}
                      >
                        <div
                          className="ant-modal-mask"
                          style={Object {}}
                        />
                      </LazyRenderBox>
                    </AnimateChild>
                  </Animate>
                  <div
                    aria-labelledby={null}
                    className="ant-modal-wrap "
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onMouseUp={[Function]}
                    role="dialog"
                    style={
                      Object {
                        "display": null,
                      }
                    }
                    tabIndex={-1}
                  >
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="dialog"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      showProp="visible"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="zoom"
                    >
                      <AnimateChild
                        animation={Object {}}
                        key="dialog-element"
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="zoom"
                      >
                        <LazyRenderBox
                          className="ant-modal search-article-modal"
                          key="dialog-element"
                          onMouseDown={[Function]}
                          role="document"
                          style={
                            Object {
                              "top": 42,
                              "width": 376,
                            }
                          }
                          visible={true}
                        >
                          <div
                            className="ant-modal search-article-modal"
                            onMouseDown={[Function]}
                            role="document"
                            style={
                              Object {
                                "top": 42,
                                "width": 376,
                              }
                            }
                          >
                            <div
                              aria-hidden="true"
                              style={
                                Object {
                                  "height": 0,
                                  "overflow": "hidden",
                                  "width": 0,
                                }
                              }
                              tabIndex={0}
                            />
                            <div
                              className="ant-modal-content"
                            >
                              <div
                                className="ant-modal-body"
                              >
                                <Search
                                  className="search-article-keywords"
                                  enterButton={false}
                                  onChange={[Function]}
                                  onSearch={[Function]}
                                  placeholder="Keywords"
                                  value=""
                                >
                                  <Input
                                    className="ant-input-search search-article-keywords"
                                    onChange={[Function]}
                                    onPressEnter={[Function]}
                                    placeholder="Keywords"
                                    prefixCls="ant-input"
                                    suffix={
                                      <Icon
                                        className="ant-input-search-icon"
                                        onClick={[Function]}
                                        type="search"
                                      />
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <span
                                      className="ant-input-search search-article-keywords ant-input-affix-wrapper"
                                    >
                                      <input
                                        className="ant-input"
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder="Keywords"
                                        style={null}
                                        type="text"
                                        value=""
                                      />
                                      <span
                                        className="ant-input-suffix"
                                      >
                                        <Icon
                                          className="ant-input-search-icon"
                                          key="searchIcon"
                                          onClick={[Function]}
                                          type="search"
                                        >
                                          <LocaleReceiver
                                            componentName="Icon"
                                          >
                                            <i
                                              aria-label="icon: search"
                                              className="anticon anticon-search ant-input-search-icon"
                                              onClick={[Function]}
                                              tabIndex={-1}
                                            >
                                              <IconReact
                                                className=""
                                                type="search-o"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className=""
                                                  data-icon="search"
                                                  fill="currentColor"
                                                  focusable="false"
                                                  height="1em"
                                                  key="svg-search"
                                                  viewBox="64 64 896 896"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                                                    key="svg-search-svg-0"
                                                  />
                                                </svg>
                                              </IconReact>
                                            </i>
                                          </LocaleReceiver>
                                        </Icon>
                                      </span>
                                    </span>
                                  </Input>
                                </Search>
                                <div
                                  className="matched-list"
                                >
                                  <Component />
                                </div>
                              </div>
                            </div>
                            <div
                              aria-hidden="true"
                              style={
                                Object {
                                  "height": 0,
                                  "overflow": "hidden",
                                  "width": 0,
                                }
                              }
                              tabIndex={0}
                            />
                          </div>
                        </LazyRenderBox>
                      </AnimateChild>
                    </Animate>
                  </div>
                </div>
              </Dialog>
            </Portal>
          </Portal>
        </PortalWrapper>
      </Component>
    </Modal>
  </SearchArticleModal>
</InjectIntl(SearchArticleModal)>
`;
