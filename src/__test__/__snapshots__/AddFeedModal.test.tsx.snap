// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddFeedModal Testing snapshot testing 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "addFeed": "Add Feed",
      "allArticlesAreReadNow": "All articles are read now.",
      "delete": "Delete",
      "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
      "feedUrl": "Feed Url",
      "feeds": "Feeds",
      "feedsAreUpdated": "Feeds are Updated",
      "invalidFeedUrl": "Invalid Feed Url",
      "keywords": "Keywords",
      "languages": "Languages",
      "menuAllItems": "All Items",
      "menuStarred": "Starred",
      "menuSubscriptions": "Subscriptions",
      "menuUnread": "Unread",
      "noMatched": "No matched",
      "settings": "Settings",
      "somethingWrong": "Something Wrong!",
      "title": "Breader",
      "unfoundFeed": "Unfound Feed",
      "unknown": "Unknown",
    }
  }
>
  <InjectIntl(AddFeedModal)
    onCancel={[MockFunction]}
    onOk={[MockFunction]}
    visible={true}
  >
    <AddFeedModal
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en-US",
          "messages": Object {
            "addFeed": "Add Feed",
            "allArticlesAreReadNow": "All articles are read now.",
            "delete": "Delete",
            "doYouWantSetAllArticlesBeRead": "Do you want set all articles be read?",
            "feedUrl": "Feed Url",
            "feeds": "Feeds",
            "feedsAreUpdated": "Feeds are Updated",
            "invalidFeedUrl": "Invalid Feed Url",
            "keywords": "Keywords",
            "languages": "Languages",
            "menuAllItems": "All Items",
            "menuStarred": "Starred",
            "menuSubscriptions": "Subscriptions",
            "menuUnread": "Unread",
            "noMatched": "No matched",
            "settings": "Settings",
            "somethingWrong": "Something Wrong!",
            "title": "Breader",
            "unfoundFeed": "Unfound Feed",
            "unknown": "Unknown",
          },
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      onCancel={[MockFunction]}
      onOk={[MockFunction]}
      visible={true}
    >
      <Modal
        afterClose={[Function]}
        className="add-feed-modal"
        confirmLoading={false}
        maskTransitionName="fade"
        okType="primary"
        onCancel={[MockFunction]}
        onOk={[Function]}
        title={
          <FormattedMessage
            id="addFeed"
            values={Object {}}
          />
        }
        transitionName="zoom"
        visible={true}
        width={376}
      >
        <DialogWrap
          afterClose={[Function]}
          className="add-feed-modal"
          closeIcon={
            <span
              className="ant-modal-close-x"
            >
              <Icon
                className="ant-modal-close-icon"
                type="close"
              />
            </span>
          }
          confirmLoading={false}
          footer={
            <LocaleReceiver
              componentName="Modal"
              defaultLocale={
                Object {
                  "cancelText": "Cancel",
                  "justOkText": "OK",
                  "okText": "OK",
                }
              }
            >
              [Function]
            </LocaleReceiver>
          }
          forceRender={false}
          maskTransitionName="fade"
          okType="primary"
          onCancel={[MockFunction]}
          onClose={[Function]}
          onOk={[Function]}
          prefixCls="ant-modal"
          title={
            <FormattedMessage
              id="addFeed"
              values={Object {}}
            />
          }
          transitionName="zoom"
          visible={true}
          width={376}
          wrapClassName=""
        >
          <Portal
            getContainer={[Function]}
          >
            <Portal
              containerInfo={
                <div>
                  <div>
                    <div
                      class="ant-modal-mask fade-appear"
                    />
                    <div
                      aria-labelledby="rcDialogTitle1"
                      class="ant-modal-wrap "
                      role="dialog"
                      tabindex="-1"
                    >
                      <div
                        class="ant-modal add-feed-modal zoom-appear"
                        role="document"
                        style="width: 376px;"
                      >
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden;"
                          tabindex="0"
                        />
                        <div
                          class="ant-modal-content"
                        >
                          <button
                            aria-label="Close"
                            class="ant-modal-close"
                            type="button"
                          >
                            <span
                              class="ant-modal-close-x"
                            >
                              <i
                                aria-label="icon: close"
                                class="anticon anticon-close ant-modal-close-icon"
                              >
                                <svg
                                  aria-hidden="true"
                                  class=""
                                  data-icon="close"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                  />
                                </svg>
                              </i>
                            </span>
                          </button>
                          <div
                            class="ant-modal-header"
                          >
                            <div
                              class="ant-modal-title"
                              id="rcDialogTitle1"
                            >
                              <span>
                                Add Feed
                              </span>
                            </div>
                          </div>
                          <div
                            class="ant-modal-body"
                          >
                            <input
                              class="ant-input input-feed-url"
                              placeholder="Feed Url"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="ant-modal-footer"
                          >
                            <div>
                              <button
                                class="ant-btn"
                                type="button"
                              >
                                <span>
                                  Cancel
                                </span>
                              </button>
                              <button
                                class="ant-btn ant-btn-primary"
                                type="button"
                              >
                                <span>
                                  OK
                                </span>
                              </button>
                            </div>
                          </div>
                        </div>
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden;"
                          tabindex="0"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              }
            >
              <Dialog
                afterClose={[Function]}
                className="add-feed-modal"
                closable={true}
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <Icon
                      className="ant-modal-close-icon"
                      type="close"
                    />
                  </span>
                }
                confirmLoading={false}
                destroyOnClose={false}
                footer={
                  <LocaleReceiver
                    componentName="Modal"
                    defaultLocale={
                      Object {
                        "cancelText": "Cancel",
                        "justOkText": "OK",
                        "okText": "OK",
                      }
                    }
                  >
                    [Function]
                  </LocaleReceiver>
                }
                forceRender={false}
                key="dialog"
                keyboard={true}
                mask={true}
                maskClosable={true}
                maskTransitionName="fade"
                okType="primary"
                onCancel={[MockFunction]}
                onClose={[Function]}
                onOk={[Function]}
                prefixCls="ant-modal"
                title={
                  <FormattedMessage
                    id="addFeed"
                    values={Object {}}
                  />
                }
                transitionName="zoom"
                visible={true}
                width={376}
                wrapClassName=""
              >
                <div>
                  <Animate
                    animation={Object {}}
                    component=""
                    componentProps={Object {}}
                    key="mask"
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="visible"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="fade"
                  >
                    <AnimateChild
                      animation={Object {}}
                      key="mask"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="fade"
                    >
                      <LazyRenderBox
                        className="ant-modal-mask"
                        hiddenClassName="ant-modal-mask-hidden"
                        key="mask"
                        style={Object {}}
                        visible={true}
                      >
                        <div
                          className="ant-modal-mask"
                          style={Object {}}
                        />
                      </LazyRenderBox>
                    </AnimateChild>
                  </Animate>
                  <div
                    aria-labelledby="rcDialogTitle1"
                    className="ant-modal-wrap "
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onMouseUp={[Function]}
                    role="dialog"
                    style={
                      Object {
                        "display": null,
                      }
                    }
                    tabIndex={-1}
                  >
                    <Animate
                      animation={Object {}}
                      component=""
                      componentProps={Object {}}
                      key="dialog"
                      onAppear={[Function]}
                      onEnd={[Function]}
                      onEnter={[Function]}
                      onLeave={[Function]}
                      showProp="visible"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="zoom"
                    >
                      <AnimateChild
                        animation={Object {}}
                        key="dialog-element"
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="zoom"
                      >
                        <LazyRenderBox
                          className="ant-modal add-feed-modal"
                          key="dialog-element"
                          onMouseDown={[Function]}
                          role="document"
                          style={
                            Object {
                              "width": 376,
                            }
                          }
                          visible={true}
                        >
                          <div
                            className="ant-modal add-feed-modal"
                            onMouseDown={[Function]}
                            role="document"
                            style={
                              Object {
                                "width": 376,
                              }
                            }
                          >
                            <div
                              aria-hidden="true"
                              style={
                                Object {
                                  "height": 0,
                                  "overflow": "hidden",
                                  "width": 0,
                                }
                              }
                              tabIndex={0}
                            />
                            <div
                              className="ant-modal-content"
                            >
                              <button
                                aria-label="Close"
                                className="ant-modal-close"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="ant-modal-close-x"
                                >
                                  <Icon
                                    className="ant-modal-close-icon"
                                    type="close"
                                  >
                                    <LocaleReceiver
                                      componentName="Icon"
                                    >
                                      <i
                                        aria-label="icon: close"
                                        className="anticon anticon-close ant-modal-close-icon"
                                      >
                                        <IconReact
                                          className=""
                                          type="close-o"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="close"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-close"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                              key="svg-close-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </i>
                                    </LocaleReceiver>
                                  </Icon>
                                </span>
                              </button>
                              <div
                                className="ant-modal-header"
                              >
                                <div
                                  className="ant-modal-title"
                                  id="rcDialogTitle1"
                                >
                                  <FormattedMessage
                                    id="addFeed"
                                    values={Object {}}
                                  >
                                    <span>
                                      Add Feed
                                    </span>
                                  </FormattedMessage>
                                </div>
                              </div>
                              <div
                                className="ant-modal-body"
                              >
                                <Input
                                  className="input-feed-url"
                                  disabled={false}
                                  onChange={[Function]}
                                  onPressEnter={[Function]}
                                  placeholder="Feed Url"
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="ant-input input-feed-url"
                                    disabled={false}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    placeholder="Feed Url"
                                    type="text"
                                    value=""
                                  />
                                </Input>
                              </div>
                              <div
                                className="ant-modal-footer"
                              >
                                <LocaleReceiver
                                  componentName="Modal"
                                  defaultLocale={
                                    Object {
                                      "cancelText": "Cancel",
                                      "justOkText": "OK",
                                      "okText": "OK",
                                    }
                                  }
                                >
                                  <div>
                                    <Button
                                      block={false}
                                      ghost={false}
                                      htmlType="button"
                                      loading={false}
                                      onClick={[Function]}
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <span
                                            key=".0"
                                          >
                                            Cancel
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                    <Button
                                      block={false}
                                      ghost={false}
                                      htmlType="button"
                                      loading={false}
                                      onClick={[Function]}
                                      type="primary"
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <span
                                            key=".0"
                                          >
                                            OK
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </LocaleReceiver>
                              </div>
                            </div>
                            <div
                              aria-hidden="true"
                              style={
                                Object {
                                  "height": 0,
                                  "overflow": "hidden",
                                  "width": 0,
                                }
                              }
                              tabIndex={0}
                            />
                          </div>
                        </LazyRenderBox>
                      </AnimateChild>
                    </Animate>
                  </div>
                </div>
              </Dialog>
            </Portal>
          </Portal>
        </DialogWrap>
      </Modal>
    </AddFeedModal>
  </InjectIntl(AddFeedModal)>
</IntlProvider>
`;
